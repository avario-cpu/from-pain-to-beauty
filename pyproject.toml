[tool.basedpyright]
reportUnusedImport = false
# reportUndefinedVariable = false

[tool.pylint.main]
extension-pkg-allow-list = ["cv2", "win32gui"]
load-plugins = ["pylint.extensions.no_self_use"]
# Start of only use pylint in the src directory
ignore = ["*"]
ignore-patterns = []
ignore-paths = ["^((?!src).)*$"]
recursive = true
source-roots = ["src"]
# End of only use pylint in the src directory

[tool.pylint.messages_control]
disable = [
  "C0114",               # missing-module-docstring (annoying)
  "C0115",               # missing-class-docstring (annoying)
  "C0116",               # missing-function-docstring (annoying)
  "W1203",               # logging-fstring-interpolation (not enough performance gain)
  "W1201",               # logging-not-lazy (not enough performance gain)
  "E1101",               # no-member (handled by other linters = HBOL)
  "W1514",               # unsupported-builtin-appeal (HBOL)
  "W0718",               # broad-except (might need to re-enable this)
  "C0301",               # line-too-long (HBOL)
  "undefined-variable",  # (HBOL)
  "import-error",        # (HBOL)
  "unused-import",       # (HBOL)
  "unused-variable",     # (HBOL pyright)
  "trailing-whitespace", # (HBOL)
  "trailing-newlines",   # (tends to trigger in empty __init__.py files)
  "no-name-in-module",   # (HBOL)

]
enable = [
  "no-self-use", # requires the no_self_use plugin, flags possibly static methods
]


[tool.ruff]
src = ["src"]
line-length = 88
select = ["ALL"]
ignore = [
  "G004", # logging-f-string. REASON: We can use (if __debug__:) instead when needed. We like fstring logging ok ??
  "T201", # print. REASON: We use print my guy.
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py312"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
force-wrap-aliases = true # Use parentheses for imports that span multiple lines

# Prefer vertical hanging indent style, like Black
combine-as-imports = true
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
